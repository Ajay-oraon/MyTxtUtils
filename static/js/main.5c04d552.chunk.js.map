{"version":3,"sources":["Components/About.js","Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","react_default","a","createElement","Fragment","className","style","id","type","data-toggle","data-target","aria-expanded","aria-controls","aria-labelledby","data-parent","Navbar","concat","dist","to","title","data-bs-toggle","data-bs-target","aria-label","aria-current","aboutText","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","heading","value","onChange","event","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","split","reverse","join","filter","element","Alert","height","alert","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setMode","_useState3","_useState4","setAlert","_useState5","_useState6","message","setTimeout","document","body","react_router_dist","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.5c04d552.chunk.js","sourcesContent":["import React, {  } from 'react'\r\n\r\nexport default function About(props) {\r\n    // const[myStyle,setMyStyle]=useState({\r\n    //     color:\"black\",\r\n    //     backgroundColor:\"white\",\r\n    //     border:'2px solid white'\r\n    // })\r\n    let myStyle={\r\n        color:props.mode==='dark'?'white':'#011932',\r\n        backgroundColor: props.mode==='dark'?'#011932':'white',\r\n    }\r\n    \r\n\r\n    \r\n  return (\r\n<>\r\n<div className=\"contianer\" style={myStyle}>\r\n    <h1 className='mx-2'>About Us</h1>\r\n    <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n        <div className=\"card\" >\r\n            <div className=\"card-header\" id=\"headingOne\" style={myStyle}>\r\n            <h5 className=\"mb-0\">\r\n                <button className=\"btn\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\" style={myStyle}>\r\n                <strong>Analyze Your text ↧</strong>\r\n                </button>\r\n            </h5>\r\n            </div>\r\n\r\n            <div id=\"collapseOne\" className=\"collapse show\" aria-labelledby=\"headingOne\" data-parent=\"#accordionExample\">\r\n            <div className=\"card-body\" style={myStyle}>\r\n                TextUtils gives you a way to analyze your text quickly and efficiently. Be it word count, Character count \r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"card\">\r\n            <div className=\"card-header\" id=\"headingTwo\" style={myStyle}>\r\n            <h5 className=\"mb-0\">\r\n                <button className=\"btn  collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\" style={myStyle}>\r\n                <strong>Free to Use ↧</strong>\r\n                </button>\r\n            </h5>\r\n            </div>\r\n            <div id=\"collapseTwo\" className=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordionExample\">\r\n            <div className=\"card-body\" style={myStyle}>\r\n                TextUtils is free character counter tool that provides instant character count & statistics for given text. TextUtils reports the number of words and Character. Thus it is suitable for writing text with word/Character limit.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"card\">\r\n            <div className=\"card-header\" id=\"headingThree\" style={myStyle}>\r\n            <h5 className=\"mb-0\">\r\n                <button className=\"btn  collapsed\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\" style={myStyle}>\r\n                <strong>Browser Compatible ↧</strong>\r\n                </button>\r\n            </h5>\r\n            </div>\r\n            <div id=\"collapseThree\" className=\"collapse\" aria-labelledby=\"headingThree\" data-parent=\"#accordionExample\">\r\n            <div className=\"card-body\" style={myStyle}>\r\n                This word counter works in any web browser such as Chrome, firefox,Internet Explorer, Safari, Opera. It suits to count characters in facebook, blog, books, excel document, pdf document, essay, ect.\r\n            </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  \r\n</div>\r\n\r\n\r\n</>\r\n  \r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n        <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n        <Link className=\"nav-link\" to=\"/about\">{props.aboutText} </Link>\r\n        </li>\r\n       \r\n      </ul>\r\n      {/* To add color palate  */}\r\n\r\n      {/* <div className=\"d-flex\">\r\n        <div className=\"bg-primary rounded mx-2\" onClick={()=>{props.toggleMode('primary')}} style={{height:'30px', width:'30px',cursor:'pointer'}}></div>\r\n        <div className=\"bg-danger rounded mx-2\" onClick={()=>{props.toggleMode('danger')}} style={{height:'30px', width:'30px',cursor:'pointer'}}></div>\r\n        <div className=\"bg-success rounded mx-2\" onClick={()=>{props.toggleMode('success')}} style={{height:'30px', width:'30px',cursor:'pointer'}}></div>\r\n        <div className=\"bg-warning rounded mx-2\" onClick={()=>{props.toggleMode('warning')}} style={{height:'30px', width:'30px',cursor:'pointer'}}></div>\r\n      </div> */}\r\n\r\n      {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n\r\n      \r\n              <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n          <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Toggle Mode</label>\r\n        </div>\r\n        \r\n    </div>\r\n  </div>\r\n</nav>\r\n\r\n  )\r\n}\r\n\r\nNavbar.propTypes= {title:PropTypes.string.isRequired,\r\n                  aboutText:PropTypes.string.isRequired\r\n                }\r\n\r\nNavbar.defaultProps={\r\n  title:\"Add Title\",\r\n  aboutText:\"About\"\r\n};","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick=()=>{\r\n        // console.log(\"Uppercase was clicked\");\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to upperCase\",'success');\r\n    }\r\n    const handleLowClick=()=>{\r\n      // console.log(\"Uppercase was clicked\");\r\n      let newText=text.toLowerCase();\r\n      setText(newText);\r\n      props.showAlert(\"Converted to LowerCase\",'success');\r\n  }\r\n  const handleReverseClick=()=>{\r\n    // console.log(\"Uppercase was clicked\");\r\n    let newText = text.split('').reverse().join('');\r\n    setText(newText);\r\n    props.showAlert(\"Words Reversed\",'success');\r\n}\r\nconst handleClear=()=>{\r\n  // console.log(\"Uppercase was clicked\");\r\n  let newText =\"\";\r\n  setText(newText);\r\n  props.showAlert(\"Text Cleared\",'success');\r\n}\r\n    const handleOnChange=(event)=>{\r\n        // console.log(\"text change\");\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState('');\r\n  return (\r\n    <>\r\n    <div className='container' style={{color:props.mode==='dark'?'white':'#011932'}}>\r\n   <h1>{props.heading}</h1>     \r\n<div className=\"form-group\">\r\n<textarea className=\"form-control\" value={text} style={{backgroundColor:props.mode==='dark'?'#030f1c':'white', color:props.mode==='dark'?'white':'#011932'}} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n</div>\r\n<button disabled={text.length===0} type=\"button\" className=\"btn btn-primary my-3\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n<button disabled={text.length===0} type=\"button\" className=\"btn btn-primary my-3 mx-2\" onClick={handleLowClick}>Convert to LowerCase</button>\r\n<button disabled={text.length===0} type=\"button\" className=\"btn btn-primary my-3 mx-2\" onClick={handleReverseClick}>Reverse Text</button>\r\n<button disabled={text.length===0} type=\"button\" className=\"btn btn-primary my-3 mx-2\" onClick={handleClear}>Clear Text</button>\r\n\r\n    </div>\r\n    <div className=\"container\" style={{color:props.mode==='dark'?'white':'#011932'}}>\r\n      <h2>Your text summary</h2>\r\n      <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n      <p>{0.008*text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes to read</p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0?text:\"Nothing to preview here!\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function \r\nAlert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n  return (\r\n    <div style={{height:'50px'}}>\r\n      {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n    <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n    </div>}\r\n    </div>\r\n    \r\n  )\r\n}\r\n","\r\nimport React ,{ useState } from 'react';\r\nimport './App.css';\r\nimport About from './Components/About';\r\nimport Navbar from './Components/Navbar';\r\nimport TextForm from './Components/TextForm';\r\nimport Alert from './Components/Alert'\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState('light'); //whether dark mode is enabled or not\r\n  const [alert, setAlert] = useState(null);\r\n  const [Yellowmode, setYellowMode] = useState('light');\r\n\r\n  const showAlert = (message, type) => {\r\n    setAlert({\r\n      msg: message,\r\n      type: type\r\n    })\r\n    setTimeout(() => {\r\n      setAlert(null);\r\n    }, 1500);\r\n  }\r\n  // for toggling color\r\n// const removeBodyClasses=()=>{\r\n//   document.body.classList.remove('bg-light')\r\n//   document.body.classList.remove('bg-dark')\r\n//   document.body.classList.remove('bg-danger')\r\n//   document.body.classList.remove('bg-warning')\r\n//   document.body.classList.remove('bg-success')\r\n// }\r\n\r\n  const toggleMode = () => {\r\n    // removeBodyClasses();\r\n    // console.log(cls);\r\n    // document.body.classList.add('bg-'+cls);\r\n    if (mode === 'light') {\r\n      setMode('dark');\r\n      document.body.style.backgroundColor = '#011932';\r\n      showAlert(\"Dark mode has been enabled\", \"success\");\r\n    }\r\n    else {\r\n      setMode('light');\r\n      document.body.style.backgroundColor = 'white';\r\n      showAlert(\"Light mode has been enabled\", \"success\");\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <>\r\n       <Router> \r\n       {/* <Navbar  /> \r\n       <Navbar title=\"TextUtils\" aboutText=\"About\" />  */}\r\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}  />\r\n      <Alert alert={alert} />\r\n      \r\n      <div className=\"container my-3\">\r\n    \r\n        <Routes>   \r\n         <Route exact path=\"/about\" element={<About mode={mode}/>} /> \r\n        <Route exact path=\"/\" element = {  \r\n        <TextForm showAlert = {showAlert} heading=\"Enter Data for Analyzing\"  mode = {mode}/>\r\n         } /> \r\n        </Routes> \r\n        </div>\r\n    </Router> \r\n    \r\n  </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}